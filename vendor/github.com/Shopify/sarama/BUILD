load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "acl_bindings.go",
        "acl_create_request.go",
        "acl_create_response.go",
        "acl_delete_request.go",
        "acl_delete_response.go",
        "acl_describe_request.go",
        "acl_describe_response.go",
        "acl_filter.go",
        "acl_types.go",
        "add_offsets_to_txn_request.go",
        "add_offsets_to_txn_response.go",
        "add_partitions_to_txn_request.go",
        "add_partitions_to_txn_response.go",
        "admin.go",
        "alter_configs_request.go",
        "alter_configs_response.go",
        "alter_partition_reassignments_request.go",
        "alter_partition_reassignments_response.go",
        "api_versions_request.go",
        "api_versions_response.go",
        "async_producer.go",
        "balance_strategy.go",
        "broker.go",
        "client.go",
        "compress.go",
        "config.go",
        "config_resource_type.go",
        "consumer.go",
        "consumer_group.go",
        "consumer_group_members.go",
        "consumer_metadata_request.go",
        "consumer_metadata_response.go",
        "control_record.go",
        "crc32_field.go",
        "create_partitions_request.go",
        "create_partitions_response.go",
        "create_topics_request.go",
        "create_topics_response.go",
        "decompress.go",
        "delete_groups_request.go",
        "delete_groups_response.go",
        "delete_records_request.go",
        "delete_records_response.go",
        "delete_topics_request.go",
        "delete_topics_response.go",
        "describe_configs_request.go",
        "describe_configs_response.go",
        "describe_groups_request.go",
        "describe_groups_response.go",
        "describe_log_dirs_request.go",
        "describe_log_dirs_response.go",
        "encoder_decoder.go",
        "end_txn_request.go",
        "end_txn_response.go",
        "errors.go",
        "fetch_request.go",
        "fetch_response.go",
        "find_coordinator_request.go",
        "find_coordinator_response.go",
        "gssapi_kerberos.go",
        "heartbeat_request.go",
        "heartbeat_response.go",
        "init_producer_id_request.go",
        "init_producer_id_response.go",
        "interceptors.go",
        "join_group_request.go",
        "join_group_response.go",
        "kerberos_client.go",
        "leave_group_request.go",
        "leave_group_response.go",
        "length_field.go",
        "list_groups_request.go",
        "list_groups_response.go",
        "list_partition_reassignments_request.go",
        "list_partition_reassignments_response.go",
        "message.go",
        "message_set.go",
        "metadata_request.go",
        "metadata_response.go",
        "metrics.go",
        "mockbroker.go",
        "mockkerberos.go",
        "mockresponses.go",
        "offset_commit_request.go",
        "offset_commit_response.go",
        "offset_fetch_request.go",
        "offset_fetch_response.go",
        "offset_manager.go",
        "offset_request.go",
        "offset_response.go",
        "packet_decoder.go",
        "packet_encoder.go",
        "partitioner.go",
        "prep_encoder.go",
        "produce_request.go",
        "produce_response.go",
        "produce_set.go",
        "real_decoder.go",
        "real_encoder.go",
        "record.go",
        "record_batch.go",
        "records.go",
        "request.go",
        "response_header.go",
        "sarama.go",
        "sasl_authenticate_request.go",
        "sasl_authenticate_response.go",
        "sasl_handshake_request.go",
        "sasl_handshake_response.go",
        "sticky_assignor_user_data.go",
        "sync_group_request.go",
        "sync_group_response.go",
        "sync_producer.go",
        "timestamp.go",
        "txn_offset_commit_request.go",
        "txn_offset_commit_response.go",
        "utils.go",
        "zstd.go",
    ],
    importmap = "k8s.io/kubernetes/vendor/github.com/Shopify/sarama",
    importpath = "github.com/Shopify/sarama",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/davecgh/go-spew/spew:go_default_library",
        "//vendor/github.com/eapache/go-resiliency/breaker:go_default_library",
        "//vendor/github.com/eapache/go-xerial-snappy:go_default_library",
        "//vendor/github.com/eapache/queue:go_default_library",
        "//vendor/github.com/jcmturner/gofork/encoding/asn1:go_default_library",
        "//vendor/github.com/klauspost/compress/zstd:go_default_library",
        "//vendor/github.com/pierrec/lz4:go_default_library",
        "//vendor/github.com/rcrowley/go-metrics:go_default_library",
        "//vendor/golang.org/x/net/proxy:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/asn1tools:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/client:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/config:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/credentials:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/gssapi:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/iana/chksumtype:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/iana/keyusage:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/keytab:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/messages:go_default_library",
        "//vendor/gopkg.in/jcmturner/gokrb5.v7/types:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
